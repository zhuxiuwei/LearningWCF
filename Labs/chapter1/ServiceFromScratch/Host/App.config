<?xml version="1.0" encoding="utf-8" ?>
<configuration>
  <startup> 
      <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.5" />
  </startup>

  <!--Below is for 方法1： from strach。-->
  <!--
    注意。使用App.config来启动host时，service contract可以不是接口而是class，那么下面的service定义里的contarct里写class就行。
    但是如果service contract定义的是interface，下面的contract里必须是interface而不是class，否则报异常找不到service contract。
  -->
  
  <!-- below is for 方法2： with App.config-->
  <!--<system.serviceModel>
    <behaviors>
      <serviceBehaviors>
        <behavior name="serviceBehavior">
          <serviceMetadata httpGetEnabled="true" />
        </behavior>
      </serviceBehaviors>
    </behaviors>
    <services>
      <service behaviorConfiguration="serviceBehavior" name="HelloIndigo.HelloIndigoService">
        <endpoint address="HelloIndigoService" binding="basicHttpBinding" bindingConfiguration="" contract="HelloIndigo.IHelloIndigoService" />
        <host>
          <baseAddresses>
            <add baseAddress="http://localhost:8000" />
          </baseAddresses>
        </host>
      </service>
    </services>
  </system.serviceModel>-->
  
  <!-- below is for SSL Certification test. 160205.
      sample: http://www.codeproject.com/Articles/36683/simple-steps-to-enable-X-certificates-on-WCF?fid=1541161&fr=1#xx0xx
  -->
  <system.serviceModel>
    <bindings>
      <wsHttpBinding>
        <binding name="wsHttpEndpointBinding">  
          <security mode="TransportWithMessageCredential"> <!--貌似必须加 mode=...  160215-->
            <message clientCredentialType="Certificate" />
          </security>
        </binding>
      </wsHttpBinding>
    </bindings>
    <services>
      <service behaviorConfiguration="sslServiceBehavior" name="HelloIndigo.SecureService" >
         <!--坑： 这里必须写接口，不能写class。否则这里编译报错，实际运行Host.exe也会报异常："System.InvalidOperationException: Service 'HelloIndigo.SSLService' has zero application (non-infrastructure) endpoints"-->
        <endpoint address="" binding="wsHttpBinding" bindingConfiguration="wsHttpEndpointBinding" contract="HelloIndigo.ISecureService">
          <!--<identity>
            <dns value="localhost"/>
          </identity>-->
        </endpoint>
        <endpoint address="mex" binding="mexHttpsBinding" contract="IMetadataExchange" />
        <host>
          <baseAddresses> <!-- 如果写了<security mode="TransportWithMessageCredential">， 貌似必须指定http和https俩地址。  160215-->
            <!--<add baseAddress="http://localhost:8000/SSLService" />-->
            <add baseAddress="https://localhost:8123/SSLService" />
          </baseAddresses>
        </host>
      </service>
      
      <!-- 下面的basicHttpBinding版本，是用来帮助add service reference的 -->
      <!--<service behaviorConfiguration="basicServiceBehavior" name="HelloIndigo.SecureService" >
        <endpoint address="" binding="basicHttpBinding" bindingConfiguration="" contract="HelloIndigo.ISecureService" />
        <endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange" />
        <host>
          <baseAddresses>
            <add baseAddress="http://localhost:8000/SSLService" />
          </baseAddresses>
        </host>
      </service>-->
    </services>
    <behaviors>
      <serviceBehaviors>
        <behavior name="basicServiceBehavior">
          <serviceMetadata httpGetEnabled="true" />
        </behavior>
        <behavior name="sslServiceBehavior">
          <!--居然还有个httpsGetEnabled，坑爹啊！http://www.allenconway.net/2012/02/applying-and-using-ssl-certificate-with.html-->
          <serviceMetadata httpsGetEnabled="true" httpGetEnabled="true" />
          <serviceDebug includeExceptionDetailInFaults="true"/>
          <serviceCredentials>
            <clientCertificate>
              <authentication certificateValidationMode="PeerTrust"/>
            </clientCertificate>
            <serviceCertificate findValue="WIN-C088QGABQ4R" storeLocation="LocalMachine" storeName="My" x509FindType="FindBySubjectName" /> <!--client是我的笔记本时-->
            <!--<serviceCertificate findValue="localhost" storeLocation="LocalMachine" storeName="My" x509FindType="FindBySubjectName" />--> <!--client也在local时-->
          </serviceCredentials>
        </behavior>
      </serviceBehaviors>
    </behaviors>

    <!--Trace 160215-->
    <!--<diagnostics wmiProviderEnabled="true">
      <messageLogging
           logEntireMessage="true"
           logMalformedMessages="true"
           logMessagesAtServiceLevel="true"
           logMessagesAtTransportLevel="true"
           maxMessagesToLog="3000"
         />
    </diagnostics>-->

  </system.serviceModel>

  <!--Trace 160215-->
  <!--<system.diagnostics>
    <sources>
      <source name="System.ServiceModel"
              switchValue="Information, ActivityTracing"
              propagateActivity="true" >
        <listeners>
          <add name="xml"/>
        </listeners>
      </source>
      <source name="System.ServiceModel.MessageLogging">
        <listeners>
          <add name="xml"/>
        </listeners>
      </source>
      <source name="myUserTraceSource"
              switchValue="Information, ActivityTracing">
        <listeners>
          <add name="xml"/>
        </listeners>
      </source>
    </sources>
    <sharedListeners>
      <add name="xml"
           type="System.Diagnostics.XmlWriterTraceListener"
                 initializeData="D:\logs\Traces_Host.svclog" />
    </sharedListeners>
  </system.diagnostics>-->

</configuration>